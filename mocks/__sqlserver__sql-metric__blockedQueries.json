{"status":200,"headers":{"server":"openresty/1.15.8.2","date":"Mon, 01 May 2023 06:10:36 GMT","content-type":"application/json","transfer-encoding":"chunked","connection":"close","vary":"Accept-Encoding","strict-transport-security":"max-age=15724800; includeSubDomains"},"data":{"metricInput":{"metricId":"performance_blockedQueries","metricPeriod":"REAL_TIME","databaseName":"udprodsql/db-prod","databaseType":"SQLSERVER","from":null,"to":null,"recommendationRequired":false},"metricOutput":{"result":{"queryList":[]},"recommendation":null},"metadata":{"underlyingQueries":["WITH ctebl (session_id, blocking_these) AS (SELECT s.session_id, blocking_these = x.blocking_these\n                                            FROM sys.dm_exec_sessions s\n                                                     CROSS apply (SELECT Isnull(CONVERT(VARCHAR(6), er.session_id), '') + ', '\n                                                                  FROM sys.dm_exec_requests AS er\n                                                                  WHERE er.blocking_session_id = Isnull(s.session_id, 0)\n                                                                    AND er.blocking_session_id <> 0\n                                                                  FOR xml path('')) AS x (blocking_these))\nSELECT             s.session_id,\n    blocked_by   = r.blocking_session_id,\n                   bl.blocking_these,\n    batch_text   = t.text,\n--     input_buffer = ib.event_info,\n    input_buffer = q.text,\n                   s.login_name,\n                   r.status,\n                   r.wait_type,\n                   r.wait_resource,\n                   CONVERT(VARCHAR, Dateadd(ms, r.wait_time, 0), 8)                AS 'wait_time',\n                   s.cpu_time,\n                   s.logical_reads,\n                   s.reads,\n                   s.writes,\n                   s.host_name,\n                   s.program_name,\n                   s.host_process_id,\n                   s.login_time,\n                   s.last_request_end_time,\n                   s.open_transaction_count,\n                   r.command,\n                   CONVERT(VARCHAR, (r.total_elapsed_time / 1000 / 86400)) + 'd ' +\n                   CONVERT(VARCHAR, Dateadd(ms, r.total_elapsed_time, 0), 8)       AS 'elapsed_time',\n                   CAST(('<?query --  ' + CHAR(13) + CHAR(13) + Substring(t.TEXT, (r.statement_start_offset / 2) + 1,\n                                                                          ((CASE r.statement_end_offset\n                                                                                WHEN - 1 THEN Datalength(t.TEXT)\n                                                                                ELSE r.statement_end_offset END -\n                                                                            r.statement_start_offset) / 2) + 1) +\n                         CHAR(13) + CHAR(13) + '--?>') AS XML)                     AS 'query_text',\n                   COALESCE(Quotename(Db_name(t.dbid)) + N'.' + Quotename(Object_schema_name(t.objectid, t.dbid)) +\n                            N'.' + Quotename(Object_name(t.objectid, t.dbid)), '') AS 'stored_proc'\nFROM sys.dm_exec_sessions s\n         LEFT OUTER JOIN sys.dm_exec_requests r ON r.session_id = s.session_id\n         INNER JOIN ctebl AS bl ON s.session_id = bl.session_id\n         INNER JOIN sys.dm_exec_connections con on s.session_id = con.session_id\n         CROSS APPLY sys.dm_exec_sql_text (con.most_recent_sql_handle) as q\n         OUTER apply sys.Dm_exec_sql_text(r.sql_handle) t\n--          OUTER apply sys.Dm_exec_input_buffer(s.session_id, NULL) AS ib\nWHERE blocking_these IS NOT NULL\n   OR r.blocking_session_id > 0 AND r.wait_type NOT LIKE 'SP_SERVER_DIAGNOSTICS%' AND r.session_id != @@SPID\nORDER BY Len(bl.blocking_these) DESC, r.blocking_session_id DESC, r.session_id;"],"referenceDocumentation":[],"description":"","supportsHistorical":true,"supportsAlert":true,"supportedAlerts":["alert_activeQueriesFilter"],"minimumRepeatInterval":"30"}}}
